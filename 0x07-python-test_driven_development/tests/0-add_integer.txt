The ``0-add_integer`` module
====================================================

Using ``add_integer``
----------------------------------------------------

This is an 0-add_integer test file in restructuredTextFormat. First import
``add_integer`` from the ``0-add_integer`` module:

    Test case 0: importing the module
    >>> add_integer = __import__('0-add_integer').add_integer

Now use it:
    Test case 1: adding two integers
    >>> add_integer(1, 2)
    3

    Test case 2: adding a positive integer and a negative integer
    >>> add_integer(100, -2)
    98

    Test case 3: adding an integer given the argument b
    >>> add_integer(2)
    100

    Test case 4: adding a float and an integer where parameter a is a float
    >>> add_integer(100.3, -2)
    98

    Test case 5: Adding a float and an integer where parameter b is a float
    >>> add_integer(-2, 100.3)
    98
    Test case 6: adding an integer or a float with a non-int or non-float type for parameter b
    >>> add_integer(4, "School")
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

    Test case 7: adding an integer or a float with a not-int or non-float type for parameter a
    >>> add_integer("School", 4)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    Test case 8: adding two integers where the arity of a is None
    >>> add_integer(None)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

